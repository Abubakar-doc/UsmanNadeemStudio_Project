  <div id="default-carousel" class="background_carousel inline-block  w-full" data-carousel="slide"
    style="z-index: -10; width: 100%; height: 100vh; display: none;">
    <!-- Carousel wrapper -->
    <div class="relative h-screen overflow-hidden">
      <!-- Item 1 -->
      <div class="carousel-item visible" data-carousel-item>
        <img src="Images/landing page/2.jpg"
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Item 1">
      </div>
      <!-- Item 2 -->
      <div class="carousel-item visible" data-carousel-item>
        <img src="Images/landing page/3.jpg"
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Item 2">
      </div>
      <!-- Item 3 -->
      <div class="carousel-item visible" data-carousel-item>
        <img src="Images/landing page/4.jpg"
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Item 3">
      </div>
      <!-- Item 4 -->
      <div class="carousel-item visible" data-carousel-item>
        <img src="Images/landing page/5.jpg"
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Item 4">
      </div>
      <!-- Item 5 -->
      <div class="carousel-item visible" data-carousel-item>
        <img src="Images/landing page/1.jpg"
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Item 5">
      </div>

    </div>
    <!-- Slider controls -->
    <button type="button" onclick="removeFocus(); goToPreviousSlide();"
      class="df_carousel left-sider-control absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
      data-carousel-prev>
      <span class="inline-flex items-center justify-center w-10 h-10 carousel-button">
        <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M5 1 1 5l4 4" />
        </svg>
        <span class="sr-only">Previous</span>
      </span>
    </button>
    <button type="button" onclick="removeFocus(); goToNextSlide();"
      class="df_carousel right-sider-control absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
      data-carousel-next>
      <span class="inline-flex items-center justify-center w-10 h-10 carousel-button">
        <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="m1 9 4-4-4-4" />
        </svg>
        <span class="sr-only">Next</span>
      </span>
    </button>
  </div>




  <script>document.addEventListener("DOMContentLoaded", function () {
      const carousel = document.querySelector('#default-carousel');
      const items = carousel.querySelectorAll('[data-carousel-item]');
      const indicators = carousel.querySelectorAll('[data-carousel-slide-to]');
      const prevButton = carousel.querySelector('[data-carousel-prev]');
      const nextButton = carousel.querySelector('[data-carousel-next]');

      let currentIndex = 0;
      let isTransitioning = false;
      let autoSlideInterval = 5000; // Set the interval for auto-sliding in milliseconds
      let autoSlideTimer;

      function showSlide(index) {
        if (index !== currentIndex) {
          items[currentIndex].classList.remove('visible');
          items[index].classList.add('visible');
          currentIndex = index;
        }
      }

      function autoSlide() {
        const newIndex = (currentIndex + 1) % items.length;
        showSlide(newIndex);
      }

      function goToPreviousSlide() {
        const newIndex = (currentIndex - 1 + items.length) % items.length;
        showSlide(newIndex);
        resetAutoSlideTimer();
      }

      function goToNextSlide() {
        const newIndex = (currentIndex + 1) % items.length;
        showSlide(newIndex);
        resetAutoSlideTimer();
      }

      prevButton.addEventListener('click', goToPreviousSlide);
      nextButton.addEventListener('click', goToNextSlide);

      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
          showSlide(index);
          resetAutoSlideTimer();
        });
      });

      items[currentIndex].classList.add('visible');

      function resetAutoSlideTimer() {
        clearInterval(autoSlideTimer);
        autoSlideTimer = setInterval(autoSlide, autoSlideInterval);
      }

      // Start the auto-slide timer initially
      resetAutoSlideTimer();
    });</script>